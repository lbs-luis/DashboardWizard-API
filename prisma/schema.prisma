// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  OPERATOR
}

model User {
  id String @id @default(uuid())

  name String
  role Role   @default(OPERATOR) // Administrator / Operator

  email         String @unique
  password_hash String

  // Relação com as empresas onde o usuário é administrador
  admin_at Company[] @relation("AdminRelation")

  // Relação com as empresas onde o usuário é operador
  operator_at Company[] @relation("OperatorRelation")

  created_at DateTime @default(now())

  @@map("users")
}

model Company {
  id String @id @default(uuid())

  name        String
  description String

  // Relacionamento com os administradores da empresa
  admins    User[]   @relation("AdminRelation")
  // Relacionamento com os operadores da empresa
  operators User[]   @relation("OperatorRelation")
  // Relacionamento com os setores da empresa
  sectors   Sector[]
  // Relacionamento com o estoque geral da empresa
  Items     Item[]
  // Relacionamento com o fluxo de pedidos
  Orders    Order[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("companies")
}

enum FluxType {
  administrative
  order
}

model Sector {
  id String @id @default(uuid())

  name        String
  description String

  fluxType FluxType // administrativo / fluxo de pedidos

  // Relacionamento com a empresa
  company    Company @relation(fields: [company_id], references: [id])
  company_id String

  // Relacionamento com SectorItems
  sectorItems SectorItems[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("sectors")
}

model SectorItems {
  id String @id @default(uuid())

  // Relacionamento com o item
  item    Item   @relation(fields: [item_id], references: [id])
  item_id String

  // Relacionamento com o setor
  sector    Sector @relation(fields: [sector_id], references: [id])
  sector_id String

  quantity       Int      @default(0)
  allocationDate DateTime @default(now())

  @@unique([item_id, sector_id]) // Garante que cada item/setor seja único
  @@map("sector_items")
}

model Item {
  id String @id @default(uuid())

  item_custom_id String @unique
  bar_code       String @unique

  name        String
  description String

  price_in_cents Int
  cost_in_cents  Int

  quantity Int @default(0)

  // Relacionamento com a empresa
  company     Company       @relation(fields: [company_id], references: [id])
  company_id  String
  // Setores onde este item pode estar alocado
  sectorItems SectorItems[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("items")
}

enum orderStatus {
  InUse
  Available
}

enum orderType {
  Intern
  Personal
}

model Order {
  id              String      @id @default(uuid())
  order_custom_id String
  items           Json
  status          orderStatus @default(Available)
  type            orderType

  company    Company @relation(fields: [company_id], references: [id])
  company_id String

  @@map("orders")
}
